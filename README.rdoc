= Redis Friends

Redis Friends adds Redis-backed storage to keep track of a user's friends and friends-of-friends

== Features

* Make and break friendships

* Retrieve lists of friends and friends-of-friends

* Determine whether a user is a friend of another user

* Find mutual friends of two users.

== Requirements

* Rails 3.0.9

* A Redis server must be running

* redis gem, >= 2.2.2

== Install

Add this line to your Gemfile:

  gem 'redis_friends', :git => 'git://github.com/al-evans/redis_friends.git'
  
Bundle:
  
  % bundle
  
== Caution

Redis Friends does NOT provide any facilities for reconstructing the database of friends' connections if the redis dumpfile is lost. It would be prudent to keep records of user actions that result in the making or breaking of friendships!
  
== Use

For example:

  class User < ActiveRecord::Base
    include RedisFriends::Friends
    [...]
  end

Adds the following instance methods:

* become_friends_with(other_user)

* drop_friendship_with(other_user)

* friends_ids

* friends

* is_friend_of?(other_user)

* friends_of_friends_ids

* friends_of_friends

* ids_of_mutual_friends_with(other_user)

* mutual_friends_with(other_user)

== Configuration

The parameters used for the redis connection, plus the key prefix used for user_friends data, can be customized. By default, the Redis connection is made using the following parameters:

  @@redis_options = {
    :host => 'localhost',
    :port => '6379',
    :db => 1,
  }

The default key prefix is:

  @@key_prefix = 'redis_friends
  
Use an application configuration entry to change these values. For example, to set the database used to 4 and the key prefix to "my_app_rf":

  MyApp::Application.config.redis_options = {:db => 4, :key_prefix => 'my_app_rf'}
  
("MyApp" should be changed to your application's name.)
